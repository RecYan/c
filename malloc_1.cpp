/* malloc */ 
# include <stdio.h>
# include <malloc.h>  //不能省

int main(void)
{
	int i = 5; //分配了4个字节 静态分配   11 行
	int * p = (int *)malloc(4); //12行 【指针变量存放首地址 占4个字节 malloc 动态分配了4个字节】 
		/*
			1. 要使用malloc函数，必须添加malloc.h这个头文件
			2. malloc函数只有一个形参，并且形参是整型 (int *) 指向首地址 
			3. 4表示请求系统为本程序分配4个字节
			4. malloc函数只能返回第一个字节的地址
			5. 12行分配了8个字节, p变量占4个字节， p所指向的内存也占4个字节
			6. p本身所占的内存是静态分配的， p所指向的内存是动态分配的   	
		*/

	*p = 5; //*p 代表的就是一个int变量， 只不过*p这个整型变量的内存分配方式和11行的i变量的分配方式不同
	free(p); //freep(p)表示把p所指向的内存给释放掉  p本身的内存是静态的，不能由程序员手动释放，p本身的内存只能在p变量所在的函数运行终止时由系统自动释放 
	printf("同志们好！\n");

	return 0;
}